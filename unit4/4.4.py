def gen_secs():
    """
    Generator function that yields seconds from 0 to 59.
    """
    for i in range(60):
        yield i


def gen_minutes():
    """
    Generator function that yields minutes from 0 to 59.
    """
    for i in range(60):
        yield i


def gen_hours():
    """
    Generator function that yields hours from 0 to 23.
    """
    for i in range(24):
        yield i


def gen_years(start=2019):
    """
    Generator function that yields years starting from the specified start year (default: 2019).
    """
    while True:
        yield start
        start += 1


def gen_months():
    """
    Generator function that yields months from 1 to 12.
    """
    for i in range(1, 13):
        yield i


def gen_time():
    """
    Generator function that yields formatted time strings in the format "HH:MM:SS".
    """
    for hour in gen_hours():
        for minute in gen_minutes():
            for second in gen_secs():
                yield "%02d:%02d:%02d" % (hour, minute, second)


def gen_days(month, leap_year=True):
    """
    Generator function that yields days of the specified month,
    considering whether it's a leap year (default: True).

    Args:
        month (int): The month for which to generate the days.
        leap_year (bool): Whether it's a leap year or not (default: True).

    Yields:
        int: The day of the specified month.
    """
    days_in_month_dict = {
        1: 31,   # January
        2: 29 if leap_year else 28,   # February
        3: 31,   # March
        4: 30,   # April
        5: 31,   # May
        6: 30,   # June
        7: 31,   # July
        8: 31,   # August
        9: 30,   # September
        10: 31,  # October
        11: 30,  # November
        12: 31   # December
    }

    for i in range(1, days_in_month_dict[month] + 1):
        yield i


def gen_date():
    """
    Generator function that yields formatted date and time strings in the format "DD/MM/YYYY HH:MM:SS".
    Generates dates starting from the year 2019 up to infinity.

    Yields:
        str: The formatted date and time string.
    """
    for year in gen_years():
        for month in gen_months():
            for day in gen_days(month, year % 4 == 0):
                for hour in gen_hours():
                    for minute in gen_minutes():
                        for second in gen_secs():
                            yield "%02d/%02d/%04d %02d:%02d:%02d" % (day, month, year, hour, minute, second)


def main():
    """
    Entry point of the program.
    Prints a subset of formatted date and time strings generated by the gen_date() function.
    """
    check = 0
    i = 0
    for date_time in gen_date():
        if i % 1000000 == 0 and i != 0:
            print(date_time)
            check += 1
        i += 1
        if check >= 3:
            break


if __name__ == '__main__':
    main()